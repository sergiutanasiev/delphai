[{"D:\\js\\delphai\\src\\index.tsx":"1","D:\\js\\delphai\\src\\reportWebVitals.ts":"2","D:\\js\\delphai\\src\\App.tsx":"3","D:\\js\\delphai\\src\\component\\index.ts":"4","D:\\js\\delphai\\src\\component\\Search.tsx":"5","D:\\js\\delphai\\src\\component\\SearchTerm.tsx":"6","D:\\js\\delphai\\src\\store.ts":"7","D:\\js\\delphai\\src\\reducers\\searchReducer.ts":"8","D:\\js\\delphai\\src\\actions\\searchAction.ts":"9","D:\\js\\delphai\\src\\component\\CompanyCollection.tsx":"10","D:\\js\\delphai\\src\\component\\Modal.tsx":"11","D:\\js\\delphai\\src\\component\\Chart.js":"12","D:\\js\\delphai\\src\\component\\Nav.tsx":"13"},{"size":614,"mtime":1611950730320,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":400,"mtime":1611951953282,"results":"17","hashOfConfig":"15"},{"size":332,"mtime":1611951856233,"results":"18","hashOfConfig":"15"},{"size":3656,"mtime":1611952323181,"results":"19","hashOfConfig":"15"},{"size":411,"mtime":1611952326234,"results":"20","hashOfConfig":"15"},{"size":177,"mtime":1611950707923,"results":"21","hashOfConfig":"15"},{"size":536,"mtime":1611950676274,"results":"22","hashOfConfig":"15"},{"size":255,"mtime":1611950674325,"results":"23","hashOfConfig":"15"},{"size":2221,"mtime":1611953251855,"results":"24","hashOfConfig":"15"},{"size":1326,"mtime":1611953390433,"results":"25","hashOfConfig":"15"},{"size":1690,"mtime":1611951700763,"results":"26","hashOfConfig":"15"},{"size":192,"mtime":1611951926294,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1tfcrfu",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"D:\\js\\delphai\\src\\index.tsx",[],["59","60"],"D:\\js\\delphai\\src\\reportWebVitals.ts",[],"D:\\js\\delphai\\src\\App.tsx",["61"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Search, CompanyCollection, Nav} from './component/index'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <header>\n      <p className=\"author\">Sergiu Tanasiev</p>\n      <Search />\n      <Nav />\n    </header>\n      <main>\n        <CompanyCollection />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\js\\delphai\\src\\component\\index.ts",[],"D:\\js\\delphai\\src\\component\\Search.tsx",["62","63"],"import React, {useEffect} from 'react'\r\nimport {SearchTerm} from './index'\r\nimport _ from 'lodash'\r\nimport * as data from '../api/company_collection.json'\r\nimport { useDispatch } from 'react-redux'\r\nimport {setMatchedCollection} from '../actions/searchAction'\r\n\r\ntype Props = {}\r\n\r\n// A list of error messages\r\nenum ErroMessages {\r\n    Empty = '',\r\n    NoMatch = 'No macthed results',\r\n    Short = 'Searched therm must be longer than 3 characters'\r\n}\r\n\r\nexport const Search:React.FC<Props> = ({}:Props) => {\r\n    const [searchTerm, setSearchTerm] = React.useState('')\r\n    const [errorLog, setSerror] = React.useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSearchTermChange = (searchTerm: string) => {\r\n        setSearchTerm(searchTerm)\r\n        if (searchTerm.length > 3) {\r\n            delayQuery(searchTerm)\r\n        }\r\n    }\r\n\r\n    const delayQuery = _.debounce(searchTerm => getMatchingCompany(searchTerm), 750)\r\n\r\n    const getMatchingCompany = async(searchTerm: string) => {\r\n        await fetchDataPromise(searchTerm)\r\n        .then(response => {\r\n            handleMatchCollection(response)\r\n        }).catch((error) => {\r\n            handleMatchCollection([])\r\n            setSerror(error)\r\n        })\r\n    }\r\n\r\n    const fetchDataPromise = (searchTerm: string):Promise<any> => {\r\n        // Make a local copy\r\n        let fakeApiData:any = Object.assign({}, Object.values(data)[0])\r\n        let results:Array<any> = []\r\n        // Run a promise and return macthed results\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                for (let i in fakeApiData) {\r\n                    if (fakeApiData[i].name.toLowerCase().includes(searchTerm)) {\r\n                        results.push(fakeApiData[i])\r\n                    }\r\n                }\r\n                if (results.length !== 0) {\r\n                    resolve(results)\r\n                } else {\r\n                    // Error message to output\r\n                    reject(ErroMessages.NoMatch)\r\n                }\r\n            }, 500)\r\n        })\r\n    }\r\n\r\n    const handleMatchCollection = (collection: Array<any>) => {\r\n        dispatch(setMatchedCollection(collection))\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Case search term has 0 characters and an error is present\r\n        // Remove the error message since the user is not currenly looking for anything\r\n        if (searchTerm.length === 0 && errorLog.length !== 0) {\r\n            // Empty the collection of companies\r\n            setSerror(ErroMessages.Empty)\r\n        }\r\n        // Case search term is bigger than 3 but and error message is already present\r\n        // And its not the case of No match error\r\n        if (searchTerm.length > 3 && \r\n            (errorLog !== ErroMessages.NoMatch && errorLog.length !== 0)) {\r\n                setSerror(ErroMessages.Empty)\r\n        }\r\n        // Set new error message\r\n        // Case search term is shorter than 4 characters but bigger than 0 (search input has at least one character)\r\n        if ((searchTerm.length <= 3 && searchTerm.length > 0) &&\r\n            errorLog.length === 0) {\r\n                handleMatchCollection([])\r\n                setSerror(ErroMessages.Short)\r\n        }\r\n        // Reset collection\r\n        if (searchTerm.length === 0 && errorLog.length === 0) {\r\n            handleMatchCollection([])\r\n        }\r\n    })\r\n\r\n    return(\r\n        <div className=\"search-bar\">\r\n            <SearchTerm searchTerm={searchTerm}\r\n            onSearchTermChange={onSearchTermChange} />\r\n            <p className={`error-log ${errorLog.length === 0 ? 'hide' : 'show'}`}>{errorLog}</p>\r\n        </div>\r\n    )\r\n}","D:\\js\\delphai\\src\\component\\SearchTerm.tsx",[],"D:\\js\\delphai\\src\\store.ts",[],"D:\\js\\delphai\\src\\reducers\\searchReducer.ts",[],"D:\\js\\delphai\\src\\actions\\searchAction.ts",[],"D:\\js\\delphai\\src\\component\\CompanyCollection.tsx",["64"],"D:\\js\\delphai\\src\\component\\Modal.tsx",["65","66"],"D:\\js\\delphai\\src\\component\\Chart.js",["67"],"import React, { useEffect } from 'react'\r\nimport {Bar} from 'react-chartjs-2'\r\n\r\n\r\nexport const CompanyChart = (props) => {\r\n  const {\r\n    collection\r\n  } = props\r\n  const [chartData, setChartData] = React.useState({})\r\n  const [isLoading, setLoadingState] = React.useState(false)\r\n  useEffect(() => {\r\n    let chartMap = new Map()\r\n      const data = {\r\n          labels: [],\r\n          datasets: [{\r\n              label: 'Years of foundation',\r\n              data: [\r\n              ],\r\n              backgroundColor:[]\r\n          }]\r\n      }\r\n      // Itterate the collection and save as value the number of time a duplicate value is found\r\n      for (let i in collection) {\r\n          if (chartMap.has(collection[i].founded)) {\r\n              chartMap.set(collection[i].founded, chartMap.get(collection[i].founded) + 1)\r\n          } else {\r\n              chartMap.set(collection[i].founded, 1)\r\n          }\r\n      }\r\n      // Parse the map and populate chart dataset\r\n      chartMap.forEach((key, value) => {\r\n          if (value === '') {\r\n            data.labels.push('No Date')\r\n          } else {\r\n            data.labels.push(value)\r\n          }\r\n          data.datasets[0].data.push(key)\r\n          // Generate a random color for each year entry\r\n          data.datasets[0].backgroundColor.push(`rgba(${generateColor()}, ${generateColor()}, ${generateColor()}, 0.7)`)\r\n      })\r\n      setChartData(data)\r\n      setLoadingState(true)\r\n  }, [])\r\n  const generateColor = () => {\r\n      return Math.floor(Math.random() * 255)\r\n  }\r\n\r\n  if (!isLoading) {\r\n    return(\r\n      <></>\r\n    )\r\n  }\r\n  return (\r\n    <div className=\"chart\">\r\n      <Bar data={chartData} />\r\n    </div>\r\n  )\r\n}",["68","69"],"D:\\js\\delphai\\src\\component\\Nav.tsx",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":12},{"ruleId":"78","severity":1,"message":"79","line":17,"column":40,"nodeType":"80","messageId":"81","endLine":17,"endColumn":48},{"ruleId":"82","severity":1,"message":"83","line":68,"column":5,"nodeType":"76","endLine":68,"endColumn":14,"suggestions":"84"},{"ruleId":"74","severity":1,"message":"85","line":15,"column":11,"nodeType":"76","messageId":"77","endLine":15,"endColumn":19},{"ruleId":"74","severity":1,"message":"86","line":2,"column":9,"nodeType":"76","messageId":"77","endLine":2,"endColumn":20},{"ruleId":"82","severity":1,"message":"87","line":12,"column":5,"nodeType":"76","endLine":12,"endColumn":14,"suggestions":"88"},{"ruleId":"82","severity":1,"message":"89","line":43,"column":6,"nodeType":"90","endLine":43,"endColumn":8,"suggestions":"91"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setSerror'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [searchTerm.length, errorLog, handleMatchCollection] as a second argument to the useEffect Hook.",["94"],"'dispatch' is assigned a value but never used.","'CompanyInfo' is defined but never used.","React Hook useEffect contains a call to 'setDescription'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.company.description] as a second argument to the useEffect Hook.",["95"],"React Hook useEffect has a missing dependency: 'collection'. Either include it or remove the dependency array.","ArrayExpression",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Add dependencies array: [searchTerm.length, errorLog, handleMatchCollection]",{"range":"103","text":"104"},"Add dependencies array: [props.company.description]",{"range":"105","text":"106"},"Update the dependencies array to be: [collection]",{"range":"107","text":"108"},[3373,3373],", [searchTerm.length, errorLog, handleMatchCollection]",[572,572],", [props.company.description]",[1449,1451],"[collection]"]