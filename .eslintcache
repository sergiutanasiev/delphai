[{"D:\\js\\delphai\\src\\index.tsx":"1","D:\\js\\delphai\\src\\reportWebVitals.ts":"2","D:\\js\\delphai\\src\\App.tsx":"3","D:\\js\\delphai\\src\\component\\index.ts":"4","D:\\js\\delphai\\src\\component\\Search.tsx":"5","D:\\js\\delphai\\src\\component\\SearchTerm.tsx":"6","D:\\js\\delphai\\src\\store.ts":"7","D:\\js\\delphai\\src\\reducers\\searchReducer.ts":"8","D:\\js\\delphai\\src\\actions\\searchAction.ts":"9","D:\\js\\delphai\\src\\component\\CompanyCollection.tsx":"10","D:\\js\\delphai\\src\\component\\Modal.tsx":"11","D:\\js\\delphai\\src\\component\\Chart.js":"12"},{"size":614,"mtime":1611950730320,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":339,"mtime":1611951059796,"results":"16","hashOfConfig":"14"},{"size":295,"mtime":1611951546832,"results":"17","hashOfConfig":"14"},{"size":3633,"mtime":1611951391782,"results":"18","hashOfConfig":"14"},{"size":411,"mtime":1611949853457,"results":"19","hashOfConfig":"14"},{"size":177,"mtime":1611950707923,"results":"20","hashOfConfig":"14"},{"size":536,"mtime":1611950676274,"results":"21","hashOfConfig":"14"},{"size":255,"mtime":1611950674325,"results":"22","hashOfConfig":"14"},{"size":1929,"mtime":1611951549235,"results":"23","hashOfConfig":"14"},{"size":1023,"mtime":1611951248642,"results":"24","hashOfConfig":"14"},{"size":1690,"mtime":1611951700763,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1tfcrfu",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\js\\delphai\\src\\index.tsx",[],["55","56"],"D:\\js\\delphai\\src\\reportWebVitals.ts",[],"D:\\js\\delphai\\src\\App.tsx",["57"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Search, CompanyCollection} from './component/index'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <Search />\n      </header>\n      <main>\n        <CompanyCollection />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\js\\delphai\\src\\component\\index.ts",[],"D:\\js\\delphai\\src\\component\\Search.tsx",["58","59"],"import React, {useEffect} from 'react'\r\nimport {SearchTerm} from './index'\r\nimport _ from 'lodash'\r\nimport * as data from '../api/company_collection.json'\r\nimport { useDispatch } from 'react-redux'\r\nimport {setMatchedCollection} from '../actions/searchAction'\r\n\r\ntype Props = {}\r\n\r\n// A list of error messages\r\nenum ErroMessages {\r\n    Empty = '',\r\n    NoMatch = 'No macthed results',\r\n    Short = 'Searched therm must be longer than 3 characters'\r\n}\r\n\r\nexport const Search:React.FC<Props> = ({}:Props) => {\r\n    const [searchTerm, setSearchTerm] = React.useState('')\r\n    const [errorLog, setSerror] = React.useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSearchTermChange = (searchTerm: string) => {\r\n        setSearchTerm(searchTerm)\r\n        if (searchTerm.length > 3) {\r\n            delayQuery(searchTerm)\r\n        }\r\n    }\r\n\r\n    const delayQuery = _.debounce(searchTerm => getMatchingCompany(searchTerm), 750)\r\n\r\n    const getMatchingCompany = async(searchTerm: string) => {\r\n        await fetchDataPromise(searchTerm)\r\n        .then(response => {\r\n            handleMatchCollection(response)\r\n        }).catch((error) => {\r\n            handleMatchCollection([])\r\n            setSerror(error)\r\n        })\r\n    }\r\n\r\n    const fetchDataPromise = (searchTerm: string):Promise<any> => {\r\n        // Make a local copy\r\n        let fakeApiData:any = Object.assign({}, Object.values(data)[0])\r\n        let results:Array<any> = []\r\n        // Run a promise and return macthed results\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                for (let i in fakeApiData) {\r\n                    if (fakeApiData[i].name.toLowerCase().includes(searchTerm)) {\r\n                        results.push(fakeApiData[i])\r\n                    }\r\n                }\r\n                if (results.length !== 0) {\r\n                    resolve(results)\r\n                } else {\r\n                    // Error message to output\r\n                    reject(ErroMessages.NoMatch)\r\n                }\r\n            }, 500)\r\n        })\r\n    }\r\n\r\n    const handleMatchCollection = (collection: Array<any>) => {\r\n        dispatch(setMatchedCollection(collection))\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Case search term has 0 characters and an error is present\r\n        // Remove the error message since the user is not currenly looking for anything\r\n        if (searchTerm.length === 0 && errorLog.length !== 0) {\r\n            // Empty the collection of companies\r\n            setSerror(ErroMessages.Empty)\r\n        }\r\n        // Case search term is bigger than 3 but and error message is already present\r\n        // And its not the case of No match error\r\n        if (searchTerm.length > 3 && \r\n            (errorLog !== ErroMessages.NoMatch && errorLog.length !== 0)) {\r\n                setSerror(ErroMessages.Empty)\r\n        }\r\n        // Set new error message\r\n        // Case search term is shorter than 4 characters but bigger than 0 (search input has at least one character)\r\n        if ((searchTerm.length <= 3 && searchTerm.length > 0) &&\r\n            errorLog.length === 0) {\r\n                handleMatchCollection([])\r\n                setSerror(ErroMessages.Short)\r\n        }\r\n        // Reset collection\r\n        if (searchTerm.length === 0 && errorLog.length === 0) {\r\n            handleMatchCollection([])\r\n        }\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            <SearchTerm searchTerm={searchTerm}\r\n            onSearchTermChange={onSearchTermChange} />\r\n            <p className={`error-log ${errorLog.length === 0 ? 'hide' : 'show'}`}>{errorLog}</p>\r\n        </div>\r\n    )\r\n}","D:\\js\\delphai\\src\\component\\SearchTerm.tsx",[],"D:\\js\\delphai\\src\\store.ts",[],"D:\\js\\delphai\\src\\reducers\\searchReducer.ts",[],"D:\\js\\delphai\\src\\actions\\searchAction.ts",[],"D:\\js\\delphai\\src\\component\\CompanyCollection.tsx",["60"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {InitialState} from '../reducers/searchReducer'\r\nimport {Modal, CompanyChart} from './index'\r\n\r\ntype CompanyCollectionProps = {\r\n    collection?: Array<any>\r\n}\r\n\r\nexport const CompanyCollection:React.FC<CompanyCollectionProps> = ({collection = []}) => {\r\n    const [company, setCompanyInfo] = React.useState([])\r\n    const [visibility, toggleVisibility] = React.useState(false)\r\n    collection = useSelector<InitialState, InitialState[\"machedCollection\"]>(state => state.machedCollection)\r\n    const dispatch = useDispatch()\r\n\r\n    const closeModal = (bool: boolean) => {\r\n        toggleVisibility(bool)\r\n    }\r\n\r\n    const handleClick = (item:any) => {\r\n        setCompanyInfo(item)\r\n        toggleVisibility(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n    }, [])\r\n\r\n\r\n    if (collection.length === 0) {\r\n        return(\r\n            <div>\r\n                <p className=\"a-title text-align-center\">Company list is empty. Use the search bar</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <CompanyChart collection={collection}/>\r\n            <section className=\"a-collection\">\r\n                <Modal visibility={visibility}\r\n                    closeModal={closeModal}\r\n                    company={company} />\r\n                {collection.map((item, index) => {\r\n                    return (\r\n                        <article key={index}>\r\n                            <h3>{item.name}</h3>\r\n                            <div className=\"action\">\r\n                                <button onClick={() => handleClick(item)}>More Info</button>\r\n                                <button>Visit Website</button>\r\n                            </div>\r\n                        </article>\r\n                    )\r\n                })}\r\n            </section>\r\n        </div>\r\n            \r\n        \r\n    )\r\n}","D:\\js\\delphai\\src\\component\\Modal.tsx",["61","62"],"import React, { useEffect } from 'react'\r\nimport {CompanyInfo} from '../types/types'\r\n\r\ntype Props = {\r\n    company: any,\r\n    visibility: boolean,\r\n    closeModal: (visibility: boolean) => void\r\n}\r\n\r\nexport const Modal:React.FC<Props> = (props:Props) => {\r\n    return(\r\n        <div className={`modal ${props.visibility ? '' : 'hide'}`}>\r\n           <div className=\"modal-content\">\r\n                <h1>{props.company.name}</h1>\r\n                <div className=\"modal-description\">\r\n                    <div className=\"col\">\r\n                        <p>{props.company.description}</p>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <p><span>Headquerters:</span> {props.company.headquarters}</p>\r\n                        <p><span>Founded:</span> {props.company.founded}</p>\r\n                    </div>\r\n                </div>\r\n                <button className=\"close-modal\" onClick={() => props.closeModal(false)}>Close</button>\r\n           </div>\r\n        </div>\r\n    )\r\n}","D:\\js\\delphai\\src\\component\\Chart.js",["63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":12},{"ruleId":"72","severity":1,"message":"73","line":17,"column":40,"nodeType":"74","messageId":"75","endLine":17,"endColumn":48},{"ruleId":"76","severity":1,"message":"77","line":68,"column":5,"nodeType":"70","endLine":68,"endColumn":14,"suggestions":"78"},{"ruleId":"68","severity":1,"message":"79","line":14,"column":11,"nodeType":"70","messageId":"71","endLine":14,"endColumn":19},{"ruleId":"68","severity":1,"message":"80","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":26},{"ruleId":"68","severity":1,"message":"81","line":2,"column":9,"nodeType":"70","messageId":"71","endLine":2,"endColumn":20},{"ruleId":"76","severity":1,"message":"82","line":43,"column":6,"nodeType":"83","endLine":43,"endColumn":8,"suggestions":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setSerror'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [searchTerm.length, errorLog, handleMatchCollection] as a second argument to the useEffect Hook.",["87"],"'dispatch' is assigned a value but never used.","'useEffect' is defined but never used.","'CompanyInfo' is defined but never used.","React Hook useEffect has a missing dependency: 'collection'. Either include it or remove the dependency array.","ArrayExpression",["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Add dependencies array: [searchTerm.length, errorLog, handleMatchCollection]",{"range":"93","text":"94"},"Update the dependencies array to be: [collection]",{"range":"95","text":"96"},[3373,3373],", [searchTerm.length, errorLog, handleMatchCollection]",[1449,1451],"[collection]"]